import type { Ticker } from "../components/TickerTable";

export const generateDummyTickers = (): Ticker[] => [
  {
    medal: "🥇",
    ticker: "BTCUSDT",
    price: (1000000 + Math.random() * 1000000).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥈",
    ticker: "ETHUSDT",
    price: (2000 + Math.random() * 100).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "BNBUSDT",
    price: (300 + Math.random() * 20).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "SOLUSDT",
    price: (100 + Math.random() * 10).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "XRPUSDT",
    price: (0.5 + Math.random() * 0.2).toFixed(4),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "ADAUSDT",
    price: (0.3 + Math.random() * 0.1).toFixed(4),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "DOGEUSDT",
    price: (0.08 + Math.random() * 0.02).toFixed(4),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "MATICUSDT",
    price: (1 + Math.random() * 0.2).toFixed(4),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "DOTUSDT",
    price: (5 + Math.random() * 1).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "LTCUSDT",
    price: (80 + Math.random() * 10).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "TRXUSDT",
    price: (0.07 + Math.random() * 0.01).toFixed(4),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "AVAXUSDT",
    price: (15 + Math.random() * 2).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "SHIBUSDT",
    price: (0.00001 + Math.random() * 0.000001).toFixed(8),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "UNIUSDT",
    price: (6 + Math.random() * 1).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "LINKUSDT",
    price: (7 + Math.random() * 1).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
  {
    medal: "🥉",
    ticker: "ATOMUSDT",
    price: (10 + Math.random() * 2).toFixed(2),
    pctChange: (Math.random() * 10 - 5).toFixed(2),
    volPctChange: (Math.random() * 20 - 10).toFixed(2),
    float: (Math.random() * 100000).toFixed(0),
  },
];
